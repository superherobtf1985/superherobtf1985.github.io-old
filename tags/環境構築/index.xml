<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>環境構築 on はじめてブログ</title>
    <link>/tags/%E7%92%B0%E5%A2%83%E6%A7%8B%E7%AF%89/</link>
    <description>Recent content in 環境構築 on はじめてブログ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Mon, 03 May 2021 11:05:39 +0000</lastBuildDate><atom:link href="/tags/%E7%92%B0%E5%A2%83%E6%A7%8B%E7%AF%89/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>2. 環境導入</title>
      <link>/learn/hugo/install/</link>
      <pubDate>Mon, 03 May 2021 11:05:39 +0000</pubDate>
      
      <guid>/learn/hugo/install/</guid>
      <description>docker-compose.ymlの作成 Jekyllという静的サイトジェネレータを利用していたが、立ち上げに時間がかかるためHugoに移行。
今回はローカル環境も汚したくないため、コンテナでさくっと環境を作った。
klakegg/hugo の現時点で最新のバージョンを利用した。
1version: &amp;#39;3&amp;#39; 2services: 3 hugo: 4 image: klakegg/hugo:0.82.0-ubuntu 5 volumes: 6 - &amp;#34;.:/src&amp;#34; 7 ports: 8 - &amp;#34;1313:1313&amp;#34; 9 tty: true 10 working_dir: /src コンテナを起動しアタッチ docker-compose upでコンテナを起動。
起動したコンテナにアタッチしてシェルを起動。
hugoコマンドの利用 srcフォルダが作成されているので移動し、hugo new プロジェクト名によってサイトのひな形を作成。
あとはhugo new パス名/ページ名.mdで新規投稿を作成したりCSSいじったりして好きにカスタマイズ。
とっても簡単にサイトが構築できた。</description>
    </item>
    
    <item>
      <title>基本コマンド</title>
      <link>/learn/tmux/howtouse/</link>
      <pubDate>Mon, 03 May 2021 11:05:39 +0000</pubDate>
      
      <guid>/learn/tmux/howtouse/</guid>
      <description>セッション 新規セッションの開始（名前指定） 1$ tmux 2$ tmux new-session -s &amp;lt;name&amp;gt; # 名前付き アタッチ（起動） 1$ tmux attach # 直近のセッションにアタッチする 2$ tmux attach -t 0 デタッチ 1$ prefix + d セッション名の変更 1$ prefix + $ セッションの終了 1$ tmux kill-session -t セッション名 2$ prefix + &amp;amp; # 全てのセッションの終了 ウィンドウ（prefixのデフォルトはCtrl + b） Window操作ショートカット 1$ prefix + w # 一覧表示 2$ prefix + c # 新規Window作成 3 4# Window切り替え 5$ prefix + ウィンドウ番号 6$ prefix + n # 次のWindowへ切り替え 7$ prefix + p # 前のWindowへ切り替え 8 9$ prefix + &amp;amp; # Windowの削除 ペイン分割 1$ prefix + &amp;#34; # 水平分割 2$prefix + % # 垂直分割 3$prefix + o # ペイン間の移動 4$prefix + x # ペインの分割解除 </description>
    </item>
    
  </channel>
</rss>
