<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>はじめてブログ</title>
    <link>/</link>
    <description>Recent content on はじめてブログ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sat, 10 Jul 2021 08:31:21 +0000</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>1. 便利なEclipseショートカット</title>
      <link>/learn/java/eclipse-shortcut/</link>
      <pubDate>Sat, 10 Jul 2021 08:31:21 +0000</pubDate>
      
      <guid>/learn/java/eclipse-shortcut/</guid>
      <description>便利なショートカット集  パッケージの一括インポート：Ctrl + Shift + O 変数リネーム：Shift + Alt + R 宣言を開く：F3（呼び出し階層を開くときは Ctrl + Alt + h コードフォーマッター：Ctrl + Shift + F 複数行コメントアウト：Ctrl + Shift + / タブで開いているファイルを検索：Ctrl + e  </description>
    </item>
    
    <item>
      <title>1. コードブロック</title>
      <link>/learn/hugo/code-highlight/</link>
      <pubDate>Sat, 01 May 2021 02:45:35 +0000</pubDate>
      
      <guid>/learn/hugo/code-highlight/</guid>
      <description>Hugoのコードハイライト コードハイライトはHugoのhighlightショートコードを使って記載できる。
 {{&amp;lt; highlight 言語 &amp;gt;}}で出力 オプション   linenos
行番号を設定できるようになる(true, false, inline, table)
Learnテーマではコピーアンドペースト機能がついているため、inlineを指定
  linenostart
行番号の開始番号を指定
  hl_lines
強調表示する行番号を指定
空白区切りで複数箇所選択可能
2-4は2~4行目というように複数行指定も可能
    実行例 {{&amp;lt; highlight java &amp;quot;linenos=inline,linenostart=3,hl_lines=2&amp;quot; &amp;gt;}} public static void main(String[] args) { System.out.println(&amp;quot;Hello World!&amp;quot;); } {{&amp;lt; / highlight &amp;gt;}} 3public static void main(String[] args) { 4 System.out.println(&amp;#34;Hello World!&amp;#34;); 5} </description>
    </item>
    
    <item>
      <title>2. 環境導入</title>
      <link>/learn/hugo/install/</link>
      <pubDate>Mon, 03 May 2021 11:05:39 +0000</pubDate>
      
      <guid>/learn/hugo/install/</guid>
      <description>docker-compose.ymlの作成 Jekyllという静的サイトジェネレータを利用していたが、立ち上げに時間がかかるためHugoに移行。
今回はローカル環境も汚したくないため、コンテナでさくっと環境を作った。
klakegg/hugo の現時点で最新のバージョンを利用した。
1version: &amp;#39;3&amp;#39; 2services: 3 hugo: 4 image: klakegg/hugo:0.82.0-ubuntu 5 volumes: 6 - &amp;#34;.:/src&amp;#34; 7 ports: 8 - &amp;#34;1313:1313&amp;#34; 9 tty: true 10 working_dir: /src コンテナを起動しアタッチ docker-compose upでコンテナを起動。
起動したコンテナにアタッチしてシェルを起動。
hugoコマンドの利用 srcフォルダが作成されているので移動し、hugo new プロジェクト名によってサイトのひな形を作成。
あとはhugo new パス名/ページ名.mdで新規投稿を作成したりCSSいじったりして好きにカスタマイズ。
とっても簡単にサイトが構築できた。</description>
    </item>
    
    <item>
      <title>3. 注意書きブロックの書き方</title>
      <link>/learn/hugo/notice/</link>
      <pubDate>Sat, 10 Jul 2021 08:18:20 +0000</pubDate>
      
      <guid>/learn/hugo/notice/</guid>
      <description>Hugoのコードハイライト 詳細
 {{\% notice warning %}}と {{\% notice %}}で囲むことで、warningをつけることができる（\は不要） 使える属性は以下のもの  note info tip warning    </description>
    </item>
    
    <item>
      <title>1. Data Analytics</title>
      <link>/portfolio/data-analytics/</link>
      <pubDate>Sat, 05 Jun 2021 13:24:09 +0000</pubDate>
      
      <guid>/portfolio/data-analytics/</guid>
      <description>データ分析をするWEBアプリを作成してみた 作成時期 2020年のGW
背景 某株式会社さんのインターン選考で作成しました。
データ分析は初学者でしたが、興味本位で受けてみました。
テストデータの予測スコアを競う、 かつ任意でWEBアプリケーションとして作成するという課題でした。
成果物 WEBアプリケーションはFlaskを初めて使ってみました。
選考時はデプロイしていたのですが、もう1年以上経ってしまっているので公開していません。
代わりに当時ブログに書いた備忘録を移動したnote記事 とGitHubを貼ります。
noteの記事の最後にGIFを載せていますが、アプリの大まかな操作です。
 テストファイル（課題で出されていたファイル）をアップロードする 予測データ作成ボタンを押下すると分析が始まる 予測データが作成し終わるとダウンロードボタンが押せるようになる ダウンロードボタンを押下すると予測データファイルがダウンロードされる  結果 残念ながら選考は不合格でした。
のちに1on1でフィードバックして頂く機会があり、お聞きしたところ合格スコアは超えていたようですが、
特段優れたものでもないので、時間の多くとれる学生の方が優先して採用されたようです。
優れている人は社会人でも合格しているので単純に力不足でした。
しかし、データ分析やFlaskなど未知領域を調べてやってみるという経験ができ、非常にためになりました。</description>
    </item>
    
    <item>
      <title>2. 勉強でECサイト作ってみた</title>
      <link>/portfolio/dicite/</link>
      <pubDate>Sat, 05 Jun 2021 13:24:09 +0000</pubDate>
      
      <guid>/portfolio/dicite/</guid>
      <description>2人で簡単なECサイト作ってみた 作成時期 2019年夏 1か月程
背景 インターンの学習の一貫で作成しました。
2人で作成しましたが、約7割は自身で作成しました。
環境 Ruby 2.5.5
Rails 5.2.3
成果物 簡易ECサイトを作成しました。
GitHub
一部GitHub内にも入れましたが、設計も少し行いました。
 UI Flow WireFrame ER図 テーブル設計 詳細設計など  主な機能  商品のCRUD ユーザー登録、退会 カート追加、削除 いいね、コメント機能 検索機能など  </description>
    </item>
    
    <item>
      <title>基本コマンド</title>
      <link>/learn/tmux/howtouse/</link>
      <pubDate>Mon, 03 May 2021 11:05:39 +0000</pubDate>
      
      <guid>/learn/tmux/howtouse/</guid>
      <description>セッション 新規セッションの開始（名前指定） 1$ tmux 2$ tmux new-session -s &amp;lt;name&amp;gt; # 名前付き アタッチ（起動） 1$ tmux attach # 直近のセッションにアタッチする 2$ tmux attach -t 0 デタッチ 1$ prefix + d セッション名の変更 1$ prefix + $ セッションの終了 1$ tmux kill-session -t セッション名 2$ prefix + &amp;amp; # 全てのセッションの終了 ウィンドウ（prefixのデフォルトはCtrl + b） Window操作ショートカット 1$ prefix + w # 一覧表示 2$ prefix + c # 新規Window作成 3 4# Window切り替え 5$ prefix + ウィンドウ番号 6$ prefix + n # 次のWindowへ切り替え 7$ prefix + p # 前のWindowへ切り替え 8 9$ prefix + &amp;amp; # Windowの削除 ペイン分割 1$ prefix + &amp;#34; # 水平分割 2$prefix + % # 垂直分割 3$prefix + o # ペイン間の移動 4$prefix + x # ペインの分割解除 </description>
    </item>
    
    <item>
      <title>1. このサイトについて</title>
      <link>/profile/about-site/</link>
      <pubDate>Sun, 02 May 2021 07:11:17 +0000</pubDate>
      
      <guid>/profile/about-site/</guid>
      <description>背景 はじめてブログは学生時代に学んだことを管理しようと思い、レンタルサーバーを借りてWordPressで運営していました。
しかし就業してから思うように時間が取れず、閉鎖しました。
ただドメインは長らく保持しているので、お金をかけずに学んだことをアウトプットできるものを作ろうと思い、今回のリニューアルに至りました。
移行作業を特にしていないため、過去記事は載せていません。
今後気軽に新しくアップしていくつもりです。
このブログに記載した内容は全て個人の意見であり、所属組織等にはいっさい関係がございません。
また必ずしも正しい情報である責任を負えません。
 </description>
    </item>
    
    <item>
      <title>2. プロフィール</title>
      <link>/profile/about-me/</link>
      <pubDate>Sun, 02 May 2021 06:53:03 +0000</pubDate>
      
      <guid>/profile/about-me/</guid>
      <description>自己紹介  shunT SIer勤務 東京の某国立大学の情報学部を卒業 趣味は野球観戦（読売ジャイアンツファン） 最近ワインのおいしさに気づく  経験  ベンチャー企業で少しだけインターンシップしてPHPとか書いたり 某プログラミングスクールのメンターしたり アジャイル開発したり Java開発したり WordPressでサイト運営したり  資格  基本情報技術者 応用情報技術者 AWS Certified Solutions Architect - Associate
資格も今後もう少し積極的に受けたいですね。。  </description>
    </item>
    
  </channel>
</rss>
